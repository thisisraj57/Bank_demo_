**Class: Category**

**Description:**
Represents a category in a system, such as a product category or a blog category.

**Attributes:**

* **id:** The unique identifier of the category.
* **name:** The name of the category.
* **description:** A description of the category.

**Annotations:**

* `@Id`: Indicates that the `id` field is the primary key of the entity.
* `@GeneratedValue(strategy = GenerationType.IDENTITY)`: Specifies that the `id` field should be auto-generated by the database using the IDENTITY strategy. This means that the database will automatically generate a unique ID for each new category.

**Example Usage:**

```java
// Create a new category
Category category = new Category();
category.setName("Books");
category.setDescription("A category for books");

// Save the category to the database
categoryRepository.save(category);

// Get the category by its ID
Category retrievedCategory = categoryRepository.findById(1L).orElseThrow(() -> new ResourceNotFoundException("Category not found with id :" + 1L));

// Update the category
retrievedCategory.setDescription("A more detailed description of the Books category");
categoryRepository.save(retrievedCategory);

// Delete the category
categoryRepository.deleteById(1L);
```

**Additional Notes:**

* The `@Id` and `@GeneratedValue` annotations are used to define the primary key and its generation strategy, respectively.
* The `orElseThrow` method is used to throw a `ResourceNotFoundException` if the category with the specified ID is not found in the database.