Certainly! Here's the documentation for the provided code:

---

## Documentation for Prime Number Checker

### Function: `is_prime`

#### Description:
The `is_prime` function checks if a given number is a prime number. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.

#### Parameters:
- `number` (int): The number to check for primality.

#### Returns:
- `bool`: Returns `True` if the number is prime, `False` otherwise.

#### Implementation Details:
1. **Initial Check**: The function first checks if the number is less than or equal to 1. If it is, the function returns `False` because prime numbers are greater than 1.
2. **Loop Through Possible Divisors**: The function then loops from 2 to the square root of the number (inclusive). This is because a larger factor of the number must be a multiple of a smaller factor that has already been checked.
3. **Check for Divisibility**: Inside the loop, the function checks if the number is divisible by any of these possible divisors. If it finds any divisor that divides the number evenly (i.e., `number % i == 0`), it returns `False`.
4. **Return True**: If no divisors are found, the function returns `True`, indicating that the number is prime.

#### Example Usage:
```python
if __name__ == "__main__":
    num = 29
    if is_prime(num):
        print(f"{num} is a prime number.")
    else:
        print(f"{num} is not a prime number.")
```

In this example, the code checks if the number 29 is prime and prints the result.

---

### Full Code:
```python
# Function to check if a number is prime
def is_prime(number):
    """
    Check if a number is prime.

    :param number: The number to check.
    :return: True if the number is prime, False otherwise.
    """
    if number <= 1:
        return False
    for i in range(2, int(number ** 0.5) + 1):
        if number % i == 0:
            return False
    return True

# Example usage
if __name__ == "__main__":
    num = 29
    if is_prime(num):
        print(f"{num} is a prime number.")
    else:
        print(f"{num} is not a prime number.")
```

This documentation provides a clear understanding of the function's purpose, its parameters, return values, and an example of how to use it.