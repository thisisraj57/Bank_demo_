**Java Exception Handling with Custom Exception Class**

**Introduction:**

This code demonstrates how to create and handle custom checked exceptions in Java. A custom exception class is defined to handle specific error conditions in the program.

**Custom Exception Class:**

* `CustomException` is a custom checked exception class that extends the `Exception` class.
* It has a constructor that takes a message as an argument and passes it to the `Exception` class constructor.

**Main Class:**

* `Main` class contains an `ArrayList` of strings representing programming languages.
* `checkLanguage` method checks if a given language already exists in the `ArrayList`.
* If the language exists, it throws a `CustomException` with a message indicating that the language already exists.
* If the language does not exist, it adds the language to the `ArrayList` and prints a message indicating that the language has been added.

**Exception Handling:**

* In the `main` method, an instance of the `Main` class is created.
* `try...catch` block is used to handle the `CustomException`.
* If the `checkLanguage` method throws a `CustomException`, the `catch` block is executed and the exception message is printed.

**Usage:**

* The `checkLanguage` method is called twice, once with a new language ("Swift") and once with an existing language ("Java").
* The first call adds "Swift" to the `ArrayList` and prints a success message.
* The second call throws a `CustomException` because "Java" already exists in the `ArrayList`, and the exception message is printed.

**Benefits of Custom Exceptions:**

* Custom exceptions allow you to create specific error conditions that are relevant to your application.
* They provide a more informative error message than the generic `Exception` class.
* They force the caller to handle the exception or declare it in the method signature, ensuring that errors are not ignored.